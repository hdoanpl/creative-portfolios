{"version":3,"sources":["webpack:///./src/pages/head.js","webpack:///./src/pages/global.js","webpack:///./src/components/PortfoliosList.js","webpack:///./src/components/PortfolioItem.js","webpack:///./src/components/ContributeBtn.js","webpack:///./src/components/SubTitle.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Title.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Container.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","Head","a","createElement","charSet","GlobalStyle","createGlobalStyle","_templateObject","PortfoliosList","styled","div","withConfig","displayName","componentId","PortfolioItem","SubTitle","h2","FooterWrapper","footer","Copyright","span","Footer","react_default","Title","h1","blog","data","_1686868994","Fragment","global","head","Container","components_Title","components_SubTitle","components_PortfoliosList","allMarkdownRemark","edges","map","edge","components_PortfolioItem","key","node","id","gatsby_browser_entry","to","fields","slug","react_parallax_tilt_es5","className","tiltMaxAngleX","tiltMaxAngleY","glareEnable","glareMaxOpacity","glareColor","glarePosition","gatsby_image_default","fluid","frontmatter","image","childImageSharp","title","components_Footer","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-pages-index-js-3f20521ff41254e42844.js","sourcesContent":["import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Head = () => (\r\n  <Helmet>\r\n    <meta charSet=\"utf-8\" />\r\n    <title>Helena Best Portfolio</title>\r\n  </Helmet>\r\n)\r\n\r\nexport default Head\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Open Sans:400,600,900&display=swap');\r\n  @import url('https://fonts.googleapis.com/css?family=VT323:400,600,900&display=swap');\r\n\r\n  html,\r\n  body {\r\n    height: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n    font-size: 1em;\r\n  }\r\n\r\n  *, *:before, *:after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    font-family: 'VT323', monospace;\r\n    background-color: #0c0d17;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n    h2 {\r\n        color: #fff;\r\n    }\r\n\r\n      .muted {\r\n        font-family: 'Open Sans', sans serif;\r\n    }\r\n\r\n  p {\r\n    line-height: 1.4;\r\n    color: #fff;\r\n  }\r\n\r\n  /* Responsive */\r\n  @media (max-width: 768px) {\r\n    html { font-size: 9px; }\r\n  }\r\n\r\n  .contribute-btn {\r\n    position: absolute;\r\n    right: 15px;\r\n    top: 15px;\r\n    color: #fff;\r\n    text-decoration: none;\r\n    text-transform: lowercase;\r\n  }\r\n\r\n    .smol-img {\r\n        margin: 200px;\r\n        flex-wrap: nowrap;\r\n        height: 200px;\r\n}\r\n\r\n`\r\n\r\nexport default GlobalStyle\r\n","import styled from 'styled-components'\r\n\r\nconst PortfoliosList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 40px 25px;\r\n  width: 100%;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      .portfolio-item__title:before {\r\n        transform: scale(1);\r\n      }\r\n    }\r\n\r\n    .portfolio-item__title {\r\n      display: block;\r\n      font-size: 22px;\r\n      font-weight: 400;\r\n      border-radius: 4px;\r\n      margin-top: 10px;\r\n      color: rgba(255, 255, 255, 0.9);\r\n      position: relative;\r\n\r\n      &:before {\r\n        content: '';\r\n        width: 10px;\r\n        height: 10px;\r\n        border-radius: 50%;\r\n        position: absolute;\r\n        bottom: 8px;\r\n        right: 0;\r\n        background-color: rgba(255, 255, 255, 0.8);\r\n        transform: scale(0);\r\n        transform-origin: center;\r\n        transition: transform 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default PortfoliosList\r\n","import styled from 'styled-components'\r\n\r\nconst PortfolioItem = styled.div`\r\n  .portfolio-item {\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n  }\r\n`\r\n\r\nexport default PortfolioItem\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ContributeBtnStyle = styled.a`\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid #fff;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    &:before {\r\n      opacity: 1;\r\n      visibility: visible;\r\n    }\r\n  }\r\n\r\n  &:before {\r\n    content: 'Contribute';\r\n    position: absolute;\r\n    left: -115px;\r\n    background-color: #fff;\r\n    padding: 8px 12px;\r\n    border-radius: 4px;\r\n    color: #333;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    transition: all 0.3s ease;\r\n  }\r\n`\r\n\r\nconst ContributeBtn = ({ href }) => (\r\n  <ContributeBtnStyle href={href}>\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      fill=\"none\"\r\n      stroke=\"#fff\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    >\r\n      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n    </svg>\r\n  </ContributeBtnStyle>\r\n)\r\n\r\nexport default ContributeBtn\r\n","import styled from 'styled-components'\r\n\r\nconst SubTitle = styled.h2`\r\n  font-size: 3rem;\r\n  margin-top: 6px;\r\n  margin-bottom: 60px;\r\n  color: rgba(255, 255, 255, 1);\r\n  font-weight: 400;\r\n  opacity: 0.8;\r\n\r\n  span:nth-child(1) {\r\n    color: #f093fb;\r\n  }\r\n  span:nth-child(2) {\r\n    color: #f5576c;\r\n  }\r\n`\r\n\r\nexport default SubTitle\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst FooterWrapper = styled.footer`\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Copyright = styled.span`\r\n  color: rgba(255, 255, 255, 0.6);\r\n`\r\n\r\nconst Footer = () => (\r\n  <FooterWrapper>\r\n    <Copyright>Helena.</Copyright>\r\n  </FooterWrapper>\r\n)\r\n\r\nexport default Footer\r\n","import styled from 'styled-components'\r\n\r\nconst Title = styled.h1`\r\n  display: block;\r\n  background: #FF00FF;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  font-size: 6.4rem;\r\n  font-weight: 900;\r\n  margin-bottom: 0;\r\n  line-height: 1;\r\n  margin-bottom: 20px;\r\n`\r\n\r\nexport default Title\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React from 'react'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\nimport Tilt from 'react-parallax-tilt'\r\n\r\nimport Head from './head'\r\nimport GlobalStyle from './global'\r\nimport PortfoliosList from '../components/PortfoliosList'\r\nimport PortfolioItem from '../components/PortfolioItem'\r\nimport ContributeBtn from '../components/ContributeBtn'\r\nimport Container from '../components/Container'\r\nimport SubTitle from '../components/SubTitle'\r\nimport Footer from '../components/Footer'\r\nimport Title from '../components/Title'\r\n\r\nconst blog = () => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n        edges {\r\n          node {\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              title\r\n              image {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 800, maxHeight: 480, quality: 100) {\r\n                    ...GatsbyImageSharpFluid\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n\r\n      <Head />\r\n\r\n\r\n      <Container>\r\n\r\n        <Title>Helena Best Portfolio Eva</Title>\r\n        <SubTitle>\r\n          \r\n          <span>dadasda</span>\r\n        </SubTitle>\r\n\r\n        <PortfoliosList>\r\n          {data.allMarkdownRemark.edges.map(edge => (\r\n            <PortfolioItem key={edge.node.id}>\r\n              <Link to={`/${edge.node.fields.slug}`}>\r\n\r\n                <Tilt\r\n                  className=\"portfolio-item\"\r\n                  tiltMaxAngleX={2}\r\n                  tiltMaxAngleY={2}\r\n                  glareEnable\r\n                  glareMaxOpacity={0.2}\r\n                  glareColor=\"#ffffff\"\r\n                  glarePosition=\"all\"\r\n                >\r\n                  <Img\r\n                    fluid={edge.node.frontmatter.image.childImageSharp.fluid}\r\n                  />\r\n                </Tilt>\r\n                <span className=\"portfolio-item__title\">\r\n                  {edge.node.frontmatter.title}\r\n                </span>\r\n              </Link>\r\n            </PortfolioItem>\r\n          ))}\r\n        </PortfoliosList>\r\n\r\n        <Footer />\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default blog\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  max-width: 992px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 40px 15px;\r\n`\r\n\r\nexport default Container\r\n"],"sourceRoot":""}